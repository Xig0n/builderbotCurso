version: '3'

services:
  rails:
    image: chatwoot/chatwoot:latest
    env_file: stack.env ## Change this file for customized env variables
    restart: always
    volumes:
      - storage:/app/storage
    networks:
      - caddy
    depends_on:
      - postgres
      - redis

    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']
    labels:
      - caddy=sub.dominio.com
      - caddy.reverse_proxy="{{upstreams 3000}}"

  sidekiq:
    image: chatwoot/chatwoot:latest
    env_file: stack.env ## Change this file for customized env variables
    restart: always
    volumes:
      - storage:/app/storage
    networks:
      - caddy
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    image: postgres:12
    restart: always

    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=POSTGRES_PASSWORD
    networks:
      - caddy

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    volumes:
      - redis:/data
    networks:
      - caddy
    env_file: stack.env ## Change this file for customized env variables

networks:
  caddy:
    name: caddy
    external: true

volumes:
  storage:
  redis:
  postgres:
